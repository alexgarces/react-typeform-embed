{"version":3,"sources":["components/ReactTypeformEmbed/index.js","examples/ExampleWidget.js","examples/ExamplePopup.js","examples/index.js","index.js"],"names":["styleDefault","position","top","left","width","height","overflow","ReactTypeformEmbed","_this$props","this","props","url","hideHeaders","hideFooter","opacity","buttonText","popup","options","mode","autoOpen","autoClose","onSubmit","typeform","typeformEmbed","elm","typeformElm","_this","style","Object","assign","react_default","a","createElement","className","ref","tf","Component","defaultProps","ExampleWidget","components_ReactTypeformEmbed","ExamplePopup","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openForm","bind","assertThisInitialized","open","_this2","onClick","cursor","React","Examples","href","target","rel","examples_ExampleWidget","examples_ExamplePopup","ReactDOM","render","examples","document","getElementById"],"mappings":"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","file":"static/js/main.ea7714d3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as typeformEmbed from '@typeform/embed';\n\nconst styleDefault = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  overflow: 'hidden'\n};\n\nclass ReactTypeformEmbed extends Component {\n  componentDidMount() {\n    const {\n      url,\n      hideHeaders,\n      hideFooter,\n      opacity,\n      buttonText,\n      popup,\n      mode,\n      autoOpen,\n      autoClose,\n      onSubmit\n    } = this.props;\n\n    const options = {\n      hideHeaders,\n      hideFooter,\n      opacity,\n      buttonText,\n      mode,\n      autoOpen,\n      autoClose,\n      onSubmit\n    };\n\n    // Popup Mode\n    if (popup) {\n      // Load Typeform embed popup\n      this.typeform = typeformEmbed.makePopup(url, options);\n\n      // Widget Mode (default)\n    } else {\n      const elm = this.typeformElm;\n\n      // Load Typeform embed widget\n      typeformEmbed.makeWidget(elm, url, options);\n    }\n  }\n\n  render() {\n    const style = Object.assign({}, styleDefault, this.props.style);\n\n    return (\n      <div\n        className=\"ReactTypeformEmbed\"\n        ref={tf => {\n          this.typeformElm = tf;\n        }}\n        style={style}\n      />\n    );\n  }\n}\n\nReactTypeformEmbed.propTypes = {\n  style: PropTypes.object,\n  url: PropTypes.string.isRequired,\n  popup: PropTypes.bool,\n  hideHeaders: PropTypes.bool,\n  hideFooter: PropTypes.bool,\n\n  // Widget options\n  opacity: PropTypes.number,\n  buttonText: PropTypes.string,\n\n  // Popup options\n  mode: PropTypes.string,\n  autoOpen: PropTypes.bool,\n  autoClose: PropTypes.number,\n  onSubmit: PropTypes.func\n};\n\n// Default values taken from official Typeform docs\n// https://developer.typeform.com/embed/modes/\nReactTypeformEmbed.defaultProps = {\n  style: {},\n  popup: false,\n  hideHeaders: false,\n  hideFooter: false,\n  onSubmit: () => {},\n\n  // Widget options\n  opacity: 100,\n  buttonText: 'Start',\n\n  // Popup options\n  mode: 'popup', // options: \"popup\", \"drawer_left\", \"drawer_right\"\n  autoOpen: false,\n  autoClose: 5\n};\n\nexport default ReactTypeformEmbed;\n","import React from 'react';\nimport { ReactTypeformEmbed } from '../components';\n\nconst ExampleWidget = () => {\n  return (\n    <div className=\"ExampleWidget\">\n      <ReactTypeformEmbed popup={false} url=\"https://demo.typeform.com/to/njdbt5\" />\n    </div>\n  );\n};\n\nexport default ExampleWidget;\n","import React from 'react';\nimport { ReactTypeformEmbed } from '../components';\n\nclass ExamplePopup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.openForm = this.openForm.bind(this);\n  }\n\n  openForm() {\n    this.typeformEmbed.typeform.open();\n  }\n\n  render() {\n    return (\n      <div className=\"ExamplePopup\">\n        <ReactTypeformEmbed\n          popup\n          autoOpen={false}\n          url=\"https://demo.typeform.com/to/njdbt5\"\n          hideHeaders\n          hideFooter\n          buttonText=\"Go!\"\n          style={{ top: 100 }}\n          ref={tf => {\n            this.typeformEmbed = tf;\n          }}\n        />\n        <button className=\"btn\" onClick={this.openForm} style={{ cursor: 'pointer' }}>\n          Click to open the popup!\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ExamplePopup;\n","import React from 'react';\n\nimport ExampleWidget from './ExampleWidget';\nimport ExamplePopup from './ExamplePopup';\n\nclass Examples extends React.Component {\n  constructor(props) {\n    super(props);\n    this.openForm = this.openForm.bind(this);\n  }\n\n  openForm() {\n    this.typeformEmbed.typeform.open();\n  }\n\n  render() {\n    return (\n      <div className=\"Examples\">\n        <div className=\"container\">\n          <h1>React Typeform Embed</h1>\n          <p>\n            {`A React wrapper for `}\n            <a\n              href=\"https://developer.typeform.com/embed/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Typeform Embed SDK\n            </a>\n            .\n          </p>\n          <p>\n            Visit <a href=\"https://github.com/alexgarces/react-typeform-embed\">Github</a> repository\n            for more info.\n          </p>\n          <br />\n          <br />\n          <h2>Widget Mode Example</h2>\n          <br />\n          <div className=\"Examples__widget-section\">\n            <ExampleWidget />\n          </div>\n          <br />\n          <hr />\n          <br />\n          <h2>Popup Mode Example</h2>\n          <br />\n          <div className=\"Examples__popup-section\">\n            <ExamplePopup />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Examples;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport Examples from './examples';\n\nReactDOM.render(<Examples />, document.getElementById('root'));\n"],"sourceRoot":""}